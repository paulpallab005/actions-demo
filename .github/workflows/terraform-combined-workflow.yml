name: Terraform Plan Dispatcher

on:
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      path:
        description: 'Terraform path (e.g., terraform/app1/us-east-1/stage)'
        required: true

jobs:
  fetch-push-details:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Fetch previous commit
        run: git fetch --depth=2

      - name: Generate matrix from changed files
        id: set-matrix
        run: |
          base_sha=$(git rev-parse HEAD^ || git rev-parse HEAD)
          changed_files=$(git diff --name-only "$base_sha" HEAD | grep '^terraform/' || true)

          echo "Changed files:"
          echo "$changed_files"

          # Extract directory paths like terraform/app1/us-east-1/stage/ec2
          dir_paths=$(echo "$changed_files" \
            | xargs -n1 dirname \
            | grep '^terraform/.*/.*/.*/.*' \
            | sort -u)

          matrix=$(echo "$dir_paths" | sed 's|^terraform/||' \
            | jq -R -s -c 'split("\n") | map(select(. != "")) 
                | map(split("/") | {app_name: .[0], aws_region: .[1], app_env: .[2], component: .[3]})')

          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "Matrix JSON: $matrix"


  plan-push:
    if: ${{ github.event_name == 'push' }}
    needs: fetch-push-details
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.fetch-push-details.outputs.matrix) }} 
    environment: ${{ matrix.app_env }}
    steps:

      - uses: actions/checkout@v4 
      - name: Run Terraform Plan for push
        uses: ./.github/actions/terraform-plan
        with:
          app_name: ${{ matrix.app_name }}
          aws_region: ${{ matrix.aws_region }}
          app_env: ${{ matrix.app_env }}
          aws_acc_id: ${{ vars.AWS_ACC_ID }}
          dir_path: ${{ matrix.dir_path }}

  fetch-dispatch-details:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.parse.outputs.app_name }}
      aws_region: ${{ steps.parse.outputs.aws_region }}
      app_env: ${{ steps.parse.outputs.app_env }}
      dir_path: ${{ steps.parse.outputs.dir_path }}
    steps:
      - uses: actions/checkout@v4

      - name: Parse path input
        id: parse
        run: |
          # Check if the path ends with a .tf file
          if [[ "${{ inputs.path }}" == *.tf ]]; then
            relative_path=$(dirname "${{ inputs.path }}")
            echo "dir_path=$relative_path" >> $GITHUB_OUTPUT
          else
            relative_path="${{ inputs.path }}"
            echo "dir_path=$relative_path" >> $GITHUB_OUTPUT
          fi

          #fetch region and environemnt
          app_name=$(echo "$relative_path" | cut -d'/' -f2)
          region=$(echo "$relative_path" | cut -d'/' -f3)
          env=$(echo "$relative_path" | cut -d'/' -f4)
          echo "app_name=$app_name" >> $GITHUB_OUTPUT
          echo "aws_region=$region" >> $GITHUB_OUTPUT
          echo "app_env=$env" >> $GITHUB_OUTPUT

  plan-dispatch:
    needs: fetch-dispatch-details
    environment: ${{ needs.fetch-dispatch-details.outputs.app_env }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Terraform Plan for dispatch
        uses: ./.github/actions/terraform-plan
        with:
          app_name: ${{ needs.fetch-dispatch-details.outputs.app_name }}
          aws_region: ${{ needs.fetch-dispatch-details.outputs.aws_region }}
          app_env: ${{ needs.fetch-dispatch-details.outputs.app_env }}
          aws_acc_id: ${{ vars.AWS_ACC_ID }}
          dir_path: ${{ needs.fetch-dispatch-details.outputs.dir_path }}
            